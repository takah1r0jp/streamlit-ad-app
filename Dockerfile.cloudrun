# Cloud Run最適化版Dockerfile
FROM python:3.11-slim as builder

# システムレベルの依存関係をインストール
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Install uv
COPY --from=ghcr.io/astral-sh/uv:latest /uv /uvx /usr/local/bin/

# Copy project files
COPY pyproject.toml uv.lock* ./

# Install dependencies
RUN uv sync --frozen --no-cache

# 本番用最小イメージ
FROM python:3.11-slim

# 必要な実行時依存関係のみインストール
RUN apt-get update && apt-get install -y \
    libgl1 \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

WORKDIR /app

# uvと仮想環境をコピー
COPY --from=builder /usr/local/bin/uv /usr/local/bin/
COPY --from=builder /app/.venv /app/.venv

# アプリケーションコードをコピー
COPY . .

# 環境変数でPythonパスを設定
ENV PATH="/app/.venv/bin:$PATH"

# Cloud Run用の設定（PORTは自動設定される）
EXPOSE 8501

# ヘルスチェック用エンドポイント（軽量化）
HEALTHCHECK --interval=60s --timeout=10s --start-period=120s --retries=2 \
    CMD curl -f http://localhost:8501/_stcore/health || exit 1

# Streamlit設定を最適化
RUN mkdir -p /root/.streamlit && \
    echo '[server]\nport = 8501\naddress = "0.0.0.0"\nheadless = true\n[browser]\ngatherUsageStats = false\n[theme]\nbase = "light"' > /root/.streamlit/config.toml

# 実行コマンド（Cloud RunのPORT環境変数を使用）
CMD ["sh", "-c", "python -m streamlit run app/main.py --server.port=${PORT:-8501} --server.address=0.0.0.0 --server.headless=true"]